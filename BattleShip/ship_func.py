class Ship():
    def __init__(self, type, start, vector, deck):
        self.status = 3           # –î–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è —á—Ç–æ —ç—Ç–æ –∫–æ—Ä–∞–±–ª—å.
        self.health = type        # –¢–∏–ø –∫–æ—Ä–æ–±–ª—è, –æ–Ω –∂–µ –µ–≥–æ –∑–¥–æ—Ä–æ–≤—å–µ.
        self.start_index = start  # –°—Ç–∞—Ä—Ç–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å –ø–æ–∑–∏—Ü–∏–∏ –∫–æ—Ä–æ–±–ª—è.


        self.deck = deck          # –≠–∫–∑–µ–º–ø–ª—è—Ä –¥–æ—Å–∫–∏ –æ–∫—Ä–∞—Å–∫–∏ –≥—Ä–∞–Ω–∏—Ü.
        self.type = type          # –î–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–∏–π –∏—Ç–µ—Ä–∞—Ü–∏–∏.
        self.vector = vector      # –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ—Ä–æ–±–ª—è.

    def kill(self):
        def validtor(index):
            if self.deck[index].status != 1:
                return True
            else:
                return False

        start = self.start_index

        if self.vector == 'up':
            for i in range(
                    self.type + 1):  # –ë–µ—Ä–µ–º –Ω–∞ –æ–¥–∏–Ω –±–æ–ª—å—à–µ –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ –±—ã —Å—Ç–∞—Ä—Ç —É—á–∏—Ç—ã–≤–∞–ª —Ç—Ä–∏ –∫–ª–µ—Ç–∫–∏ –ü–û–î —Å—Ç–∞—Ä—Ç–æ–≤–æ–π.

                    if i == 0:  # –¢—Ä–∏ –∫–ª–µ—Ç–∫–∏ –ü–û–î –æ—Å–Ω–æ–≤–Ω–æ–π
                        left = start +12 - 1
                        right = start + 12 + 1
                        if validtor(start + 12):
                            self.deck[start + 12].status = 4
                            self.deck[start + 12].name = 'üûï'
                        if validtor(left):
                            self.deck[left].status = 4
                            self.deck[left].name = 'üûï'
                        if validtor(right):
                            self.deck[right].status = 4
                            self.deck[right].name = 'üûï'

                        # –ü–µ—Ä–≤–∞—è –∫–ª–µ—Ç–∫–∞ –∫–æ—Ä–∞–±–ª—è.
                        left = start + 1
                        right = start - 1
                        if validtor(left):
                            self.deck[left].status = 4
                            self.deck[left].name = 'üûï'
                        if validtor(right):
                            self.deck[right].status = 4
                            self.deck[right].name = 'üûï'

                        start -= 12

                    elif i == self.type:  # –î–≤–∏–∂–µ–Ω–∏–µ –Ω–∞ –æ–¥–Ω—É –∫–ª–µ—Ç–∫—É –≤–≤–µ—Ä—Ö –Ω–∞–¥ –ø–æ—Å–ª–µ–¥–Ω–µ–π.

                        left = start - 1
                        right = start + 1
                        if validtor(start):
                            self.deck[start].status = 4
                            self.deck[start].name = 'üûï'
                        if validtor(left):
                            self.deck[left].status = 4
                            self.deck[left].name = 'üûï'
                        if validtor(right):
                            self.deck[right].status = 4
                            self.deck[right].name = 'üûï'

                    else:
                        left = start - 1
                        right = start + 1
                        if validtor(left):
                            self.deck[left].status = 4
                            self.deck[left].name = 'üûï'
                        if validtor(right):
                            self.deck[right].status = 4
                            self.deck[right].name = 'üûï'
                        start -= 12

        elif self.vector == 'down':
            for i in range(
                    self.type + 1):  # –ë–µ—Ä–µ–º –Ω–∞ –æ–¥–∏–Ω –±–æ–ª—å—à–µ –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ –±—ã —Å—Ç–∞—Ä—Ç —É—á–∏—Ç—ã–≤–∞–ª —Ç—Ä–∏ –∫–ª–µ—Ç–∫–∏ –ù–ê–î —Å—Ç–∞—Ä—Ç–æ–≤–æ–π.

                if i == 0:  # –¢—Ä–∏ –∫–ª–µ—Ç–∫–∏ –ü–û–î –æ—Å–Ω–æ–≤–Ω–æ–π
                    left = start - 12 - 1
                    right = start - 12 + 1
                    if validtor(start - 12):
                        self.deck[start - 12].status = 4
                        self.deck[start - 12].name = 'üûï'
                    if validtor(left):
                        self.deck[left].status = 4
                        self.deck[left].name = 'üûï'
                    if validtor(right):
                        self.deck[right].status = 4
                        self.deck[right].name = 'üûï'

                    # –ü–µ—Ä–≤–∞—è –∫–ª–µ—Ç–∫–∞ –∫–æ—Ä–∞–±–ª—è.
                    left = start + 1
                    right = start - 1
                    if validtor(left):
                        self.deck[left].status = 4
                        self.deck[left].name = 'üûï'
                    if validtor(right):
                        self.deck[right].status = 4
                        self.deck[right].name = 'üûï'

                    start += 12

                elif i == self.type:  # –î–≤–∏–∂–µ–Ω–∏–µ –Ω–∞ –æ–¥–Ω—É –∫–ª–µ—Ç–∫—É –≤–≤–µ—Ä—Ö –Ω–∞–¥ –ø–æ—Å–ª–µ–¥–Ω–µ–π.

                    left = start - 1
                    right = start + 1
                    if validtor(start):
                        self.deck[start].status = 4
                        self.deck[start].name = 'üûï'
                    if validtor(left):
                        self.deck[left].status = 4
                        self.deck[left].name = 'üûï'
                    if validtor(right):
                        self.deck[right].status = 4
                        self.deck[right].name = 'üûï'

                else:
                    left = start - 1
                    right = start + 1
                    if validtor(left):
                        self.deck[left].status = 4
                        self.deck[left].name = 'üûï'
                    if validtor(right):
                        self.deck[right].status = 4
                        self.deck[right].name = 'üûï'
                    start += 12

        elif self.vector == 'right':
            for i in range(
                    self.type + 1):

                if i == 0:  # –¢—Ä–∏ –∫–ª–µ—Ç–∫–∏ –ø–µ—Ä–µ–¥
                    left = start - 1 - 12
                    right = start - 1 + 12
                    if validtor(start - 1):
                        self.deck[start - 1].status = 4
                        self.deck[start - 1].name = 'üûï'
                    if validtor(left):
                        self.deck[left].status = 4
                        self.deck[left].name = 'üûï'
                    if validtor(right):
                        self.deck[right].status = 4
                        self.deck[right].name = 'üûï'

                    # –ü–µ—Ä–≤–∞—è –∫–ª–µ—Ç–∫–∞ –∫–æ—Ä–∞–±–ª—è.
                    left = start + 12
                    right = start - 12
                    if validtor(left):
                        self.deck[left].status = 4
                        self.deck[left].name = 'üûï'
                    if validtor(right):
                        self.deck[right].status = 4
                        self.deck[right].name = 'üûï'

                    start += 1

                elif i == self.type:

                    left = start - 12
                    right = start + 12
                    if validtor(start):
                        self.deck[start].status = 4
                        self.deck[start].name = 'üûï'
                    if validtor(left):
                        self.deck[left].status = 4
                        self.deck[left].name = 'üûï'
                    if validtor(right):
                        self.deck[right].status = 4
                        self.deck[right].name = 'üûï'

                else:
                    left = start - 12
                    right = start + 12
                    if validtor(left):
                        self.deck[left].status = 4
                        self.deck[left].name = 'üûï'
                    if validtor(right):
                        self.deck[right].status = 4
                        self.deck[right].name = 'üûï'
                    start += 1


        elif self.vector == 'left':
            for i in range(
                    self.type + 1):

                if i == 0:  # –¢—Ä–∏ –∫–ª–µ—Ç–∫–∏ –ø–µ—Ä–µ–¥
                    left = start + 1 - 12
                    right = start + 1 + 12
                    if validtor(start + 1):
                        self.deck[start + 1].status = 4
                        self.deck[start + 1].name = 'üûï'
                    if validtor(left):
                        self.deck[left].status = 4
                        self.deck[left].name = 'üûï'
                    if validtor(right):
                        self.deck[right].status = 4
                        self.deck[right].name = 'üûï'

                    # –ü–µ—Ä–≤–∞—è –∫–ª–µ—Ç–∫–∞ –∫–æ—Ä–∞–±–ª—è.
                    left = start + 12
                    right = start - 12
                    if validtor(left):
                        self.deck[left].status = 4
                        self.deck[left].name = 'üûï'
                    if validtor(right):
                        self.deck[right].status = 4
                        self.deck[right].name = 'üûï'

                    start -= 1

                elif i == self.type:

                    left = start - 12
                    right = start + 12
                    if validtor(start):
                        self.deck[start].status = 4
                        self.deck[start].name = 'üûï'
                    if validtor(left):
                        self.deck[left].status = 4
                        self.deck[left].name = 'üûï'
                    if validtor(right):
                        self.deck[right].status = 4
                        self.deck[right].name = 'üûï'

                else:
                    left = start - 12
                    right = start + 12
                    if validtor(left):
                        self.deck[left].status = 4
                        self.deck[left].name = 'üûï'
                    if validtor(right):
                        self.deck[right].status = 4
                        self.deck[right].name = 'üûï'
                    start -= 1

    def damage(self, index):
        self.deck[index] = '‚ñ•'

        if self.health == 1:
            self.health -= 1
            self.status = 4
            __class__.kill(self)
            return True
        else:
            self.health -= 1
            return 'boom'



    def __repr__(self):
        if self.health > 0:
            return 'üûì'
        else:
            return '‚ñ¶'